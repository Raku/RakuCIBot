use Test;
use Test::Mock;

use SourceArchiveCreator;
use CITestStatusListener;
use CITestSetManager;
use GitHubCITestRequester;
use GitHubInterface;
use DB;
use Red:api<2>;

# Fast, in memory, ephemeral DB.
red-defaults("SQLite");
DB::create-db();
#my $*RED-DEBUG = True;

# Disable background worklist processing. Makes the tests more reliable.
my $*SERIAL_DEDUP_NO_THREADING = True;

### Mocks
# cp = CI platform
class TestCIPlatform {
    has $.test-set;
    method new-test-set(:$!test-set) {}
}

class TestCITestStatusListener does CITestStatusListener {
    has @.new-tests;
    has @.changed-tests;
    method tests-queued(@tests) {
        @!new-tests.append: @tests;
    }

    method test-status-changed($test) {
        @!changed-tests.append: $test;
    }
}

my $github-interface = mocked(GitHubInterface);

my $dummy-id = "some dummy id";

class TestSourceArchiveCreator {
    method create-archive(SourceSpec $source-spec --> Str) {
        return $dummy-id;
    }
}

my $cp = TestCIPlatform.new;
my $sac = TestSourceArchiveCreator.new;
# gh = Github
my $gh-listener = TestCITestStatusListener.new;

my CITestSetManager $tsm .= new:
    source-archive-creator => $sac;

### Register the listeners
$tsm.register-test-set-listener: $cp;
$tsm.register-status-listener: $gh-listener;

my GitHubCITestRequester $gh .= new:
    testset-manager => $tsm,
    :$github-interface;



### Testing starts here

### Adding a new test set
$gh.new-main-commit(
    repo => "rakudo/rakudo",
    branch => "master",
    commit-sha => "0123456789012345678901234567890123456789",
    user-url => "https://github.com/patrickbkr/GitHub-API-Testing/commit/1182b59facb4e86c591d691ed5a3f4b95433577b");

ok $cp.test-set, "Adding a test set notifies the CI platforms";
is $cp.test-set.source-archive-id, $dummy-id, "Adding a test forwards the source archive id";

### Adding test suites
my $test = DB::CITest.new;
$tsm.add-tests($test);
is $gh-listener.new-tests.elems, 1, "New tests are forwarded to the Status listeners";
is $gh-listener.new-tests[0], $test, "New tests are forwarded to the Status listeners";

### Updating test status
$tsm.test-status-updated($test);
is $gh-listener.changed-tests.elems, 1, "Status updates are forwarded to the status listeners";
is $gh-listener.changed-tests[0], $test, "Status updates are forwarded to the status listeners";

done-testing;
